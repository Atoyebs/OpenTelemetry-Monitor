x-default-logging: &logging
  driver: "json-file"
  options:
    max-size: "5m"
    max-file: "2"
    tag: "{{.Name}}"

networks:
  default:
    name: telem-net
    driver: bridge

volumes:
  mysql-data:
  prometheus_data: {}

services:
  grafana:
    image: grafana/grafana-enterprise:10.4.2
    container_name: grafana
    deploy:
      resources:
        limits:
          memory: 200M
    restart: unless-stopped
    volumes:
      - ./config/grafana/datasources:/etc/grafana/provisioning/datasources
      - ./config/grafana/grafana.ini:/etc/grafana/grafana.ini
    depends_on:
      - mysql
    ports:
      - 3000:3000
    logging: *logging

  prometheus:
    image: prom/prometheus:v2.52.0
    volumes:
      #make sure that there is a prometheus.yml file in the config/prometheus folder
      - ./config/prometheus/:/etc/prometheus/
      - prometheus_data:/prometheus
    restart: unless-stopped
    command:
      - "--config.file=/etc/prometheus/prometheus.yml"
      - "--storage.tsdb.path=/prometheus"
      - "--web.enable-lifecycle"
    ports:
      - 9090:9090

  mysql:
    image: mysql:8.0
    container_name: mysql
    environment:
      MYSQL_DATABASE: telem
      MYSQL_ROOT_PASSWORD: mysecretpassword
    volumes:
      - mysql-data:/var/lib/mysql
      - ./config/mysql:/docker-entrypoint-initdb.d
    restart: unless-stopped
    ports:
      - 3306:3306

  mysql-exporter:
    image: prom/mysqld-exporter
    container_name: mysql-exporter
    command: "--config.my-cnf=/etc/.mysqld_exporter.cnf"
    ports:
      - 9104:9104
    volumes:
      - ./config/exporter/.my.cnf:/etc/.mysqld_exporter.cnf:ro

    environment:
      - DATA_SOURCE_NAME='exporter:exporterPass@(mysql:3306)/telem'
      - collect.info_schema.tablestats=true
      - collect.info_schema.userstats=true
      - collect.info_schema.query_response_time=true
      - collect.auto_increment.columns=true
      - collect.binlog_size=true
      - collect.perf_schema.eventsstatements=true
      - collect.perf_schema.eventswaits=true
      - collect.perf_schema.file_events=true
      - collect.perf_schema.indexiowaits=true
      - collect.perf_schema.tableiowaits=true
      - collect.perf_schema.tablelocks=true
    depends_on:
      - mysql
      - prometheus

  # OpenTelemetry Collector
  otelcol:
    image: otel/opentelemetry-collector-contrib:0.100.0
    deploy:
      resources:
        limits:
          memory: 200M
    restart: unless-stopped
    command: ["--config=/etc/otelcol-config.yml"]
    volumes:
      - ./config/opentelemetry/config.yaml:/etc/otelcol-config.yml
    ports:
      - 4317:4317
      - 4318:4318
      - 8889:8889
    logging: *logging
    depends_on:
      - prometheus
      - mysql
      - grafana
